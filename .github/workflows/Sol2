from PyQt6.QtWidgets import QApplication, QWidget, QVBoxLayout, QListWidget, QLabel
import sys

class RecipeApp(QWidget):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("Рецепты")
        self.setGeometry(100, 100, 400, 300)

        self.layout = QVBoxLayout()

        # Список блюд
        self.dish_list = QListWidget(self)
        self.dish_list.addItems(["Паста", "Пицца", "Салат", "Борщ", "Омлет"])
        self.dish_list.itemClicked.connect(self.show_ingredients)

        # Метка для отображения ингредиентов
        self.ingredient_label = QLabel("Выберите блюдо, чтобы увидеть ингредиенты", self)

        self.layout.addWidget(self.dish_list)
        self.layout.addWidget(self.ingredient_label)

        self.setLayout(self.layout)

        # Установка стилей
        self.setStyleSheet("""
            QWidget {
                background-color: #FFFACD;  /* Светло-желтый фон */
            }
            QListWidget {
                background-color: #FFD700;  /* Золотистый цвет для списка */
                color: black;  /* Цвет текста списка */
                border: none;  /* Убираем рамку */
                padding: 10px;  /* Отступы */
            }
            QLabel {
                font-size: 16px;  /* Размер шрифта для меток */
                padding: 10px;  /* Отступы */
                color: #8B4513;  /* Темно-коричневый цвет текста меток */
            }
        """)

        # Словарь с ингредиентами
        self.ingredients = {
            "Паста": "Макароны, соус, сыр, специи",
            "Пицца": "Тесто, томатный соус, сыр, колбаса, овощи",
            "Салат": "Листья салата, помидоры, огурцы, заправка",
            "Борщ": "Свекла, капуста, картошка, мясо, специи",
            "Омлет": "Яйца, молоко, соль, перец"
        }

    def show_ingredients(self, item):
        dish = item.text()
        ingredients = self.ingredients.get(dish, "Ингредиенты не найдены.")
        self.ingredient_label.setText(f"Ингредиенты для {dish}: {ingredients}")

if __name__ == "__main__":
    app = QApplication(sys.argv)
    recipe_app = RecipeApp()
    recipe_app.show()
    sys.exit(app.exec())
